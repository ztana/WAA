<project default="install"> 
   <property environment="env"/>
   <property file="build.properties"/> 
   <property file="${app}/tomcat.properties"/> 
   <property name="appdir" value="${basedir}/${app}"/>
   <basename property="appname" file="${appdir}"/>
   <property name="builddir" value="${appdir}/build"/>
   <property name="warfile" value="${builddir}/${appname}.war"/>
   
   <path id="classpath">
      <pathelement location="${jsf.api.jar}"/>
      <pathelement location="${servlet.api.jar}"/>
      <pathelement location="${el.api.jar}"/>
      <pathelement location="${cdi.api.jar}"/>
      <pathelement location="${bean-validation.api.jar}"/>
      <pathelement location="${jpa.api.jar}"/>
      <pathelement location="${jta.api.jar}"/>
      <pathelement location="${ejb.api.jar}"/>
      <pathelement location="${mail.api.jar}"/>
      <fileset dir="${appdir}">        
        <include name="lib/*.jar"/>
      </fileset>
   </path>
   
   <target name="init">
      <fail unless="app" message="Run ant -Dapp=..."/>
   </target>

   <target name="prepare" depends="init"
         description="Create build directory.">
      <delete dir="${builddir}"/>
      <mkdir dir="${builddir}"/>
      <mkdir dir="${builddir}/WEB-INF"/>
      <mkdir dir="${builddir}/WEB-INF/classes"/>
   </target>

   <target name="copy" depends="prepare"
         description="Copy files to build directory.">
      <copy todir="${builddir}" failonerror="false" verbose="true">
         <fileset dir="${appdir}/web"/>
      </copy>
      <copy todir="${builddir}/WEB-INF/classes" 
           failonerror="false" verbose="true">
         <fileset dir="${appdir}/src/java">
            <exclude name="**/*.java"/>
         </fileset>
      </copy>
      <copy todir="${builddir}/WEB-INF" failonerror="false" verbose="true">
         <fileset dir="${appdir}">
            <include name="lib/**"/>
	 </fileset>
      </copy>
   </target>
   
   <target name="compile" depends="copy" 
         description="Compile source files.">
      <javac 
         srcdir="${appdir}/src/java" 
         destdir="${builddir}/WEB-INF/classes"
         debug="true"
         deprecation="true">
         <compilerarg value="-Xlint:unchecked"/>
         <include name="**/*.java"/>
         <classpath refid="classpath"/>
      </javac>
   </target>
   
   <target name="jsf-libs" if="use-jsf-libs" unless="glassfish">
      <mkdir dir="${builddir}/WEB-INF/lib"/>
      <copy file="${jsf.api.jar}" todir="${builddir}/WEB-INF/lib" verbose="true"/>
      <copy file="${jsf.impl.jar}" todir="${builddir}/WEB-INF/lib" verbose="true"/>
   </target>

   <target name="el-libs" if="use-el-libs" unless="glassfish">
      <copy file="${el.api.jar}" todir="${builddir}/WEB-INF/lib" 
            verbose="true" failonerror="false"/>
      <copy file="${el.impl.jar}" todir="${builddir}/WEB-INF/lib" 
            verbose="true" failonerror="false"/>
   </target>

   <target name="bean-validation-libs" if="use-bean-validation-libs" unless="glassfish">
      <copy file="${bean-validation.impl.jar}" todir="${builddir}/WEB-INF/lib" 
            verbose="true" failonerror="false"/>
      <copy todir="${builddir}/WEB-INF/lib" verbose="true" failonerror="false">
        <fileset dir="${bean-validation.lib.dir}">
           <include name="*.jar"/>
        </fileset>
      </copy>
   </target>

   <target name="cdi-libs" if="use-cdi-libs" unless="glassfish">
      <copy file="${cdi.impl.jar}" todir="${builddir}/WEB-INF/lib" 
            verbose="true" failonerror="false"/>
   </target>
   
   <target name="tomcat-libs" depends="jsf-libs, el-libs, bean-validation-libs, cdi-libs"/>

   <target name="war" depends="clean, compile, tomcat-libs"
         description="Build WAR file.">
      <delete file="${warfile}"/>
      <jar jarfile="${warfile}" basedir="${builddir}"/>
   </target>

   <target name="install" depends="war"
         description="Deploy web application.">
      <copy file="${warfile}" todir="${deploy.dir}"/>
   </target>

   <target name="clean" depends="init"
         description="Clean everything.">
      <delete dir="${builddir}"/>
   </target>
</project>
